name: Create Completed Ticket for Colaboration Cycle Touchpoint

on:
  # issues:
  #   types: [labeled]
  pull_request:

jobs:
  ticket-creation:
    name: Create Completed Ticket
    runs-on: ubuntu-latest
    steps:
      # - name: check for labels
      #   if: ${{ github.event.label.name == 'staging-review' && contains(github.event.issue.labels.*.name, 'CC-Request')  }}
      #   run: |
      #     echo "kickoff label added to cc request ticket"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq -y

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install node-fetch
        shell: bash
        run: npm i node-fetch@2

      - name: Run script
        id: get_team_info
        run: node ./scripts/github-actions/create-cc-completed-ticket.js
      
      - name: testing
        run: |
          echo "TITLE=$(cat issue_title.txt)" >> $GITHUB_ENV

      - name: testing2
        run: |
          echo ${{ env.TITLE }}

      - name: Create completed ticket
        id: create-completed-ticket
        run: |
          response=$(curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "${{ env.TITLE }}",
            "body": "This is a test."
            }' \
          --fail)
          echo CREATED_TICKET=${response} >> $GITHUB_OUTPUT

      - name: Close ticket
        run: |
          number=$(echo "${{ steps.create-completed-ticket.outputs.CREATED_TICKET }}" | tr -d '"' | jq '.number')
          curl --request PATCH \
          --url https://api.github.com/repos/${{ github.repository }}/issues/${$number} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "state": "closed",
            }' \
          --fail