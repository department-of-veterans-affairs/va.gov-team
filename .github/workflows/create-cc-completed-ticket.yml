name: Create Completed Ticket for Colaboration Cycle Touchpoint

on:
  pull_request:

env:
  ZENHUB_API_KEY: ${{ secrets.ZENHUB_API_KEY }}

jobs:
  ticket-creation:
    name: Create Completed Ticket
    runs-on: ubuntu-latest
    # if: ${{ contains(github.event.issue.labels.*.name, 'CC-Request') && (github.event.label.name == 'kickoff' || github.event.label.name == 'design-intent' || github.event.label.name == 'midpoint-review' || github.event.label.name == 'staging-review')}}
    # env:
    #   ISSUE_TITLE: ${{ github.event.issue.title }}
    #   ISSUE_NUMBER: ${{ github.event.issue.number }}
    #   EVENT_LABEL: ${{ github.event.label.name }}
    steps:
      - name: Get va.gov-team Repository ID
        run: |
          ZENHUB_API_KEY="${{ secrets.ZENHUB_API_KEY }}"
          QUERY='{
            "query": "query { viewer { id searchWorkspaces(query: \"Platform Governance Team\") { nodes { id name repositoriesConnection { nodes { id name } } } } } }"
          }'

          REPO_ID=$(curl -s -X POST "https://api.zenhub.com/public/graphql" -H "Authorization: Bearer $ZENHUB_API_KEY" -d "$QUERY" | jq -r '.data.viewer.searchWorkspaces.nodes[0].repositoriesConnection.nodes[] | select(.name == "va.gov-team") | .id')

          echo "va.gov-team Repository ID: $REPO_ID"

      # - name: Checkout
      #   uses: actions/checkout@v3

      # - name: Set up Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '18'

      # - name: Install axios
      #   run: |
      #     npm i axios

      # - name: Run  script
      #   run: node ./scripts/github-actions/create-cc-completed-ticket.js


      